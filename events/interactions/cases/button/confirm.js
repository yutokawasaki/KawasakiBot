const { ModalBuilder, ActionRowBuilder, TextInputBuilder, EmbedBuilder } = require("@discordjs/builders")
const { TextInputStyle } = require("discord.js")

const confirm = async (interaction) => {

    const guestRole = interaction.member.guild.roles.cache.get('1157317959308554281');
    const kawasakiRole = interaction.member.guild.roles.cache.get('1155511913313222748')
    const himarsRole = interaction.member.guild.roles.cache.get('1155512068590538844')

    if (interaction.member.roles.cache.find(role => role.id == guestRole)) {
        const message = createWrongMessage(guestRole, interaction.guild)
        return await interaction.reply({
            embeds: [message],
            ephemeral: true,
        })
    }

    if (interaction.member.roles.cache.find(role => role.id == kawasakiRole)) {
        const message = createWrongMessage(kawasakiRole, interaction.guild)
        return await interaction.reply({
            embeds: [message],
            ephemeral: true,
        })
    }

    if (interaction.member.roles.cache.find(role => role.id == himarsRole)) {
        const message = createWrongMessage(himarsRole, interaction.guild)
        return await interaction.reply({
            embeds: [message],
            ephemeral: true,
        })
    }

    const modal =  new ModalBuilder({
        custom_id: 'confirm',
        title: '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è',
        components: [
            new ActionRowBuilder({
                components: [
                    new TextInputBuilder({
                        custom_id: 'name',
                        label: '–ù–∏–∫',
                        placeholder: 'Yuto_Kawasaki',
                        style: TextInputStyle.Short,
                    })
                ]
            }),
            new ActionRowBuilder({
                components: [
                    new TextInputBuilder({
                        custom_id: 'family',
                        label: '–°–µ–º—å—è',
                        placeholder: 'Kawasaki',
                        style: TextInputStyle.Short,
                    })
                ]
            }),
            new ActionRowBuilder({
                components: [
                    new TextInputBuilder({
                        custom_id: 'screenshot',
                        label: '–°–∫—Ä–∏–Ω—à–æ—Ç –∏–≥—Ä–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (/stats)',
                        placeholder: 'https://imgur.com/a/WhTqQdc',
                        style: TextInputStyle.Short,
                        required: false,
                    })
                ]
            })
        ]
    })
    return await interaction.showModal(modal);
}

const createSuccessMessage = (role, guild) => {
    const message = new EmbedBuilder({
        title: '‚úÖ –†–æ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞',
        description: `–í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å ${role} –∏ –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Å—Ç–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, –≤–µ–¥—å –∏—Ö –Ω–µ–∑–Ω–∞–Ω–∏–µ –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏; –ø–æ–º–Ω–∏—Ç–µ –æ–± —É–≤–∞–∂–µ–Ω–∏–∏ –∫ —Å–µ–±–µ –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–º.`,
        timestamp: new Date().toISOString(),
        footer: {
            text: guild.name,
            iconURL: guild.iconURL(),
        },
        color: 0xD8A3A2,
    })
    return message;
}

const createWrongMessage = (role, guild) => {
    const message = new EmbedBuilder({
        title: 'ü§® –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
        description: `–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –∏ –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å ${role}. –í–∞–º –Ω–µ–∑–∞—á–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.`,
        timestamp: new Date().toISOString(),
        footer: {
            text: guild.name,
            iconURL: guild.iconURL(),
        },
        color: 0xF2E800,
    })
    return message;
}

module.exports = confirm